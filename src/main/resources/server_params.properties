######################################################################
##   I Doc View   All Rights Reserved.                       2014   ##
######################################################################
docview.version=2.1.11_20131223

######################################################################
## Data
######################################################################
# docview data directory, e.g. D:/idocv/data/
data.dir=${pom.data.dir}
# docview data URL prefix, e.g. http://data.idocv.com/
data.url=${pom.data.url}

######################################################################
## Restrictions
######################################################################
# Supported upload file types, separated by comma, regex can be used: 
# .* matches all types. e.g. doc,docx,xls,xlsx,ppt,pptx,pdf,txt
filetype.upload=doc,docx,xls,xlsx,ppt,pptx,pdf,txt
# Supported preview file types. similar to upload types.
filetype.view=doc,docx,xls,xlsx,ppt,pptx,pdf,txt
upload.max.size=${pom.upload.max.size}
upload.max.msg=${pom.upload.max.msg}

######################################################################
## View page
######################################################################
# Whether load the preview page asynchronously or not
view.page.load.async=true

######################################################################
## Database
######################################################################
db.mongodb.ip=${pom.db.mongodb.ip}
db.mongodb.port=${pom.db.mongodb.port}

######################################################################
## Converters
######################################################################
converter.word2html=${pom.converter.word2html}
converter.word2pdf=${pom.converter.word2pdf}
converter.excel2html=${pom.converter.excel2html}
converter.ppt2jpg=${pom.converter.ppt2jpg}
converter.pdf2img=${pom.converter.pdf2img}
converter.pdf2html=${pom.converter.pdf2html}
converter.pdfsign=${pom.converter.pdfsign}

######################################################################
## Cluster
######################################################################
# Whether turn on cluster functionality: true|false
# The following parameters are valid only if this switch is set to true.
cluster.switch=true
# The mode when upload original file to Distributed File System.
# 0: Do NOT upload file to DFS.
# 1: Upload file to DFS instantly.
# 2: Upload file to DFS at the time set by "cluster.upload2dfs.cron"
cluster.upload2dfs.mode=0
# Cron expression about when to upload file to DFS.
# NOT valid if previous mode set to 0
# e.g. 0 0 23 * * * (start upload NEW file to DFS at 23 o'clock every day)
cluster.upload2dfs.cron=0 * * * * *
# DFS upload server url, e.g. http://api.idocv.com/doc/upload
cluster.dfs.server.upload=http://api.idocv.com/doc/upload
# DFS download server prefix, ending with slash, e.g. http://host:port/
cluster.dfs.server.download=http://api.idocv.com/

######################################################################
## Third Party parameters
######################################################################
# Whether check user when upload file: true|false
thd.upload.check.switch=true
# User checker when upload file, only valid when previous param set to true
# Usage: java -jar UploadCheck.jar <uid> <tid> <sid>
# 0: invalid, 1: valid
thd.upload.checker=d:/idocv/thd/UploadCheck.jar
# Get the Third Party specific MD5 code from file
# Usage: java -jar ***.jar <src>
thd.upload.file.md5=d:/idocv/thd/Md5Util.jar